# -*- coding: utf-8 -*-
"""ActivationFunction.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1wTpvLAUb2h49z-2oKHnxeGq0CtNZM-FX
"""

import math
#Hàm sigmoid
def sigmoid(x):
    return 1/(1+math.exp(-x))
#Hàm relu
def relu(x):
    if x>0:
        return x
    else:
        return 0
#Hàm elu
def elu(x):
    if x>0:
        return x
    else:
        return math.exp(x)-1
# Hàm kiểm tra x có phải là một số không
def is_number(x):
  try:
      float(x)
      return True
  except ValueError:
      return False
# Nhập giá trị x
x=input(f'Nhap gia tri cua x: ')
# Kiểm tra giá trị x
if not is_number(x):
  print('X phai la mot so')
  exit()  # Thoát chương trình nếu x không phải là số
else:
  x=float(x)  # Chuyển x thành số float nếu hợp lệ
# Chọn hàm activation_function
  chon_function= input('Nhap function de test: ')
# Định nghĩa activation function
  def activation_function(chon_function,x):
    if chon_function=='sigmoid':
      return sigmoid(x)
    elif chon_function=='relu':
      return relu(x)
    elif chon_function=='elu':
      return elu(x)
    else:
      print('Chon funnction phai la sigmoid,relu hoac elu')
# Gọi hàm và xuất kết quả
  result = activation_function(chon_function, x)
  if result is not None:
      print(f'Gia tri cua {chon_function} cua x la: {result}')
#Giai bai tap 6
assert activation_function(x = 1,chon_function= 'relu')==1
print(round(activation_function(chon_function='sigmoid',x=3),2))

import math
def is_number(n):
    try:
        float(n)
        return True
    except ValueError:
        return False
assert is_number(3)==1.0
assert is_number('-2a')==0.0
print(is_number(1))
print(is_number('n'))

import math
def calc_sig(x):
    return 1/(1+math.exp(-x))
assert round(calc_sig(3),2)==0.95
print(round(calc_sig(2),2))

import math
a=0.01
def calc_elu(x):
  if x>0:
    return x
  else:
    return a*(math.exp(x)-1)
assert round(calc_elu(1))==1
print(round(calc_elu(-1),2))

