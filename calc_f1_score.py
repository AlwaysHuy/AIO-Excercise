# -*- coding: utf-8 -*-
"""Calc_F1_score

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1v3lYWWCgA2jR0taeJAD9hamWPlAE7svR
"""

# Nhập giá trị
def nhap_gia_tri():
  try:
    TP = int(input(f'Nhap gia tri TP '))
    if TP <= 0 :
      print(f'Gia tri TP phai la so nguyen duong')
      return None
    FP = int(input(f'Nhap gia tri FP '))
    if FP <= 0 :
      print(f'Gia tri FP phai la so nguyen duong')
      return None
    FN = int(input(f'Nhap gia tri FN '))
    if FN <= 0 :
      print(f'Gia tri FN phai la so nguyen duong')
      return None
    return TP,FP,FN
  except ValueError:
    print(f'Gia tri cua TP ,FP ,FN  phai la so nguyen duong')
    return None
# Gọi hàm để thực thi
ketqua = nhap_gia_tri( )
# Giải toán
if ketqua is not None :
  TP,FP,FN = ketqua
  Precision = TP/(TP+FP)
  Recall = TP/(TP+FN)
  F1_score = 2*((Precision*Recall)/(Precision+Recall))
  print(f'Gia tri cua Precision la {Precision}')
  print(f'Gia tri cua Recall la {Recall}')
  print(f'Gia tri cua F1_score la {F1_score}')
else:
  print(f'Gia tri TP , FP , FN phai la so nguyen duong')
# bai tap 1
import math
def calc_f1_score(TP,FP,FN):
  return 2*((TP/(TP+FP))*(TP/(TP+FN)))/(TP/(TP+FP)+(TP/(TP+FN)))
assert round(calc_f1_score(TP=2,FP=3,FN=5),2)==0.33
print(round(calc_f1_score(TP=2,FP=4,FN=5),2))

def calc_f1_score(TP,FP,FN):
  return 2*((TP/(TP+FP))*(TP/(TP+FN)))/(TP/(TP+FP)+(TP/(TP+FN)))
round(calc_f1_score(TP=2,FP=3,FN=5),2)==0.33

